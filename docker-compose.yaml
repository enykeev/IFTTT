version: '3.7'

services:
  db:
    image: postgres:9.6
    environment:
      POSTGRES_USER: ifttt
      POSTGRES_PASSWORD: mypassword
    networks:
      - db
    ports:
      - 5432:5432
  mq:
    image: rabbitmq:3.8
    networks:
      - mq
    ports:
      - 5672:5672
  http:
    image: lucaslorentz/caddy-docker-proxy:alpine
    command: -log stdout
    environment:
      CADDY_DOCKER_LABEL_PREFIX: ifttt
    ports:
      - 2015:2015
      - 1234:80
    networks:
      - http
    volumes:
      - type: bind
        source: .
        target: /app
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock

  api:
    build: .
    image: enykeev/ifttt:latest
    command: pm2-runtime ecosystem.yaml --only "ifttt_migration,ifttt_api"
    environment:
      NODE_ENV: staging
      WAIT_MQ: 1
      WAIT_DB: 1
      PG_CONNECTION_STRING: postgres://ifttt:mypassword@db/ifttt
      AMQP_CONNECTION_STRING: amqp://mq
    restart: unless-stopped
    depends_on:
      - db
      - mq
    networks:
      - http
      - db
      - mq
    labels:
      - ifttt_1=http://localhost/
      - ifttt_1.root=/app/dist
      - ifttt_2.address=http://localhost/api
      - ifttt_2.targetport=3000

  ws:
    build: .
    image: enykeev/ifttt:latest
    command: pm2-runtime ecosystem.yaml --only "ifttt_ws"
    environment:
      NODE_ENV: staging
      WAIT_MQ: 1
      AMQP_CONNECTION_STRING: amqp://mq
    restart: unless-stopped
    depends_on:
      - mq
    networks:
      - http
      - mq
    labels:
      - ifttt.address=http://localhost/ws
      - ifttt.targetport=3002
      - ifttt.proxy.websocket=

  sensor:
    build: .
    image: enykeev/ifttt:latest
    command: pm2-runtime ecosystem.yaml --only ifttt_sensor_http
    environment:
      NODE_ENV: staging
      WAIT_MQ: 1
      AMQP_CONNECTION_STRING: amqp://mq
    restart: unless-stopped
    depends_on:
      - mq
    networks:
      - http
      - mq
    labels:
      - ifttt.address=http://localhost/sensor
      - ifttt.targetport=3001

  actionrunner:
    build: .
    image: enykeev/ifttt:latest
    command: pm2-runtime ecosystem.yaml --only ifttt_actionrunner_http
    environment:
      NODE_ENV: staging
      WAIT_MQ: 1
      AMQP_CONNECTION_STRING: amqp://mq
    restart: unless-stopped
    depends_on:
      - mq
    networks:
      - mq

  ruleengine:
    build: .
    image: enykeev/ifttt:latest
    command: pm2-runtime ecosystem.yaml --only ifttt_ruleengine
    environment:
      NODE_ENV: staging
      WAIT_MQ: 1
      WAIT_DB: 1
      PG_CONNECTION_STRING: postgres://ifttt:mypassword@db/ifttt
      AMQP_CONNECTION_STRING: amqp://mq
    restart: unless-stopped
    depends_on:
      - db
      - mq
    networks:
      - db
      - mq

networks:
  db:
  mq:
  http:
